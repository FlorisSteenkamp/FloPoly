(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{185:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return c}));var a=n(2),i=n(6),r=(n(0),n(231)),l={id:"euclidean_division_related_expansion_e_pdiv_trivial",title:"e-pdiv-trivial"},o={unversionedId:"modules/euclidean_division_related_expansion_e_pdiv_trivial",id:"modules/euclidean_division_related_expansion_e_pdiv_trivial",isDocsHomePage:!1,title:"e-pdiv-trivial",description:"\u25b8 function ePdivTrivial",source:"@site/docs\\modules\\euclidean_division_related_expansion_e_pdiv_trivial.mdx",slug:"/modules/euclidean_division_related_expansion_e_pdiv_trivial",permalink:"/docs/modules/euclidean_division_related_expansion_e_pdiv_trivial",version:"current",sidebar:"sidebar",previous:{title:"sturm-chain",permalink:"/docs/modules/euclidean_division_related_double_sturm_chain"},next:{title:"e-prem-sequence-primitive",permalink:"/docs/modules/euclidean_division_related_expansion_e_prem_sequence_primitive"}},b=[],p={rightToc:b};function c(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"\u25b8 function ePdivTrivial\n(",Object(r.b)("inlineCode",{parentName:"p"},"a"),": number","[][]",", ",Object(r.b)("inlineCode",{parentName:"p"},"b"),": number","[][]",", ",Object(r.b)("inlineCode",{parentName:"p"},"positiveMultiplier?"),": boolean): object"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Defined in ",Object(r.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/euclidean-division-related/expansion/e-pdiv-trivial.ts#L52"},"euclidean-division-related/expansion/e-pdiv-trivial.ts:52"))),Object(r.b)("p",null,"Performs a ",Object(r.b)("strong",{parentName:"p"},"trivial pseudo-division")," and returns the ",Object(r.b)("inlineCode",{parentName:"p"},"quotient")," and ",Object(r.b)("inlineCode",{parentName:"p"},"remainder"),"\nof the pseudo division of ",Object(r.b)("inlineCode",{parentName:"p"},"a/b")," (a, b both being polynomials) in such a way\nthat all intermediate calculations and the final result are done in \u2124, i.e.\nperforms Euclidean (i.e. long) division on the two given polynomials, a/b,\nand returns a scaled ",Object(r.b)("inlineCode",{parentName:"p"},"r")," and ",Object(r.b)("inlineCode",{parentName:"p"},"q")," in the formula ",Object(r.b)("inlineCode",{parentName:"p"},"a = bq + r"),", where\n",Object(r.b)("inlineCode",{parentName:"p"},"degree(r) < degree(b)"),". ",Object(r.b)("inlineCode",{parentName:"p"},"q")," is called the quotient and ",Object(r.b)("inlineCode",{parentName:"p"},"r")," the remainder."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"precondition:")," the coefficients must integers (and also Shewchuk\nfloating point expansions); if they are not they can easily be scaled from\nfloating point numbers to Shewchuk expansions by calling ",Object(r.b)("a",{parentName:"p",href:"/docs/modules/scale_to_int_scale_floats_to_ints#scalefloatstoints"},"scaleFloatsToInts"),"\nor similar before calling this function (recall that all floating point\nnumbers are rational).")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"Intermediate calculations (and the input coefficients) are done in\ninfinite precision up to overlow (meaning integers can be represented\n",Object(r.b)("em",{parentName:"p"},"exactly")," up to ",Object(r.b)("inlineCode",{parentName:"p"},"2^1024 === 1797...(300 more digits)...37216"),") and may\nthus not be applicable to very high degree polynomials (in which case it is\nbetter to use ",Object(r.b)("a",{parentName:"p",href:"/docs/modules/euclidean_division_related_bigint_b_pdiv_trivial#bpdivtrivial"},"bPdivTrivial"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"precondition:")," b !== [], i.e. unequal to the zero polynomial.")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"see ",Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Polynomial_greatest_common_divisor#Trivial_pseudo-remainder_sequence"},"trivial pseudo-remainder sequence"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"see also ",Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Polynomial_long_division"},"Polynomial long division"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"see ",Object(r.b)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/2e6b/95ba84e2160748ba8fc310cdc408fc9bbade.pdf"},Object(r.b)("em",{parentName:"a"},"The subresultant polynomial remainder sequence algorithm")," by Ruiyuan (Ronnie) Chen, p.10"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"see also ",Object(r.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Polynomial_greatest_common_divisor#Subresultant_pseudo-remainder_sequence"},"subresultant pseudo-remainder sequence")))),Object(r.b)("h4",{id:"parameters"},"Parameters:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Name"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Default value"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"a")),Object(r.b)("td",{parentName:"tr",align:null},"number","[][]"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"the polynomial a in the formula a = bq + r; the polynomial is given with coefficients as a dense array of integer Shewchuk expansions from highest to lowest power, e.g. ",Object(r.b)("inlineCode",{parentName:"td"},"[[5],[-3],[0]]")," represents the polynomial ",Object(r.b)("inlineCode",{parentName:"td"},"5x^2 - 3x"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"b")),Object(r.b)("td",{parentName:"tr",align:null},"number","[][]"),Object(r.b)("td",{parentName:"tr",align:null},"-"),Object(r.b)("td",{parentName:"tr",align:null},"the polynomial b in the formula a = bq + r")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"positiveMultiplier")),Object(r.b)("td",{parentName:"tr",align:null},"boolean"),Object(r.b)("td",{parentName:"tr",align:null},"false"),Object(r.b)("td",{parentName:"tr",align:null},"defaults to false - if set to true then the multiplier (of the coefficients of the dividend) ",Object(r.b)("inlineCode",{parentName:"td"},"leadingCoeff(b)^(deg(a)-deg(b)+1)")," will be modified to ",Object(r.b)("inlineCode",{parentName:"td"},"abs(leadingCoeff(b)^(deg(a)-deg(b)+1))"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," object"))}c.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),c=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,m=d["".concat(l,".").concat(u)]||d[u]||s[u]||r;return n?i.a.createElement(m,o(o({ref:t},p),{},{components:n})):i.a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);