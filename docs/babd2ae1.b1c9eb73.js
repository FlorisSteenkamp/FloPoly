(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{183:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return c}));var a=n(2),r=n(6),b=(n(0),n(231)),l={id:"predictive_random_double_random",title:"random"},i={unversionedId:"modules/predictive_random_double_random",id:"modules/predictive_random_double_random",isDocsHomePage:!1,title:"random",description:"const flatRootsArr:",source:"@site/docs\\modules\\predictive_random_double_random.mdx",slug:"/modules/predictive_random_double_random",permalink:"/docs/modules/predictive_random_double_random",version:"current",sidebar:"sidebar",previous:{title:"b-random",permalink:"/docs/modules/predictive_random_bigint_b_random"},next:{title:"all-roots-certified",permalink:"/docs/modules/roots_certified_all_roots_certified"}},o=[],p={rightToc:o};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"const")," flatRootsArr:\n(",Object(b.b)("inlineCode",{parentName:"p"},"n"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"d"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"a?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"b?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"seed?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"odds?"),": number): number","[][]"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/predictive-random/double/random.ts#L83"},"predictive-random/double/random.ts:83"))),Object(b.b)("p",null,"Generates and returns an array of polynomials with random ",Object(b.b)("strong",{parentName:"p"},"roots")," (with coefficients\ngiven densely as an array of double floating point numbers from highest to\nlowest power, e.g. ",Object(b.b)("inlineCode",{parentName:"p"},"[5,-3,0]")," represents the polynomial ",Object(b.b)("inlineCode",{parentName:"p"},"5x^2 - 3x"),")."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"all roots will approximate real values so is not at all representative of\na natural random root distribution")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"the exact same polynomials will be created on each call to this function\nif the same seed is used; this is by design to improve testing."))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-typescript"},"flatRootsArr(2,3,0,10); //=> [[1, -17.27247918024659, 97.33487287168995, -179.34094494147305], [1, -14.934967160224915, 57.624514485645406, -14.513933300587215]]\nflatRootsArr(2,3,0,10); //=> [[1, -17.27247918024659, 97.33487287168995, -179.34094494147305], [1, -14.934967160224915, 57.624514485645406, -14.513933300587215]]\n")),Object(b.b)("h4",{id:"parameters"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"n")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"the number of polynomials to generate.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"d")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"the degree of the polynomials")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"a?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the lower bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"b?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 1; the upper bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 123456789; a seed value in ","[0,4294967296]")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"odds?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the odds that a root will be doubled (applied recursively so that some roots could be tripled, etc.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," number","[][]"),Object(b.b)("hr",null),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"const")," flatCoefficientsArr:\n(",Object(b.b)("inlineCode",{parentName:"p"},"n"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"d"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"a?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"b?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"seed?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"odds?"),": number): number","[][]"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/predictive-random/double/random.ts#L110"},"predictive-random/double/random.ts:110"))),Object(b.b)("p",null,"Generates and returns an array of polynomials with random ",Object(b.b)("strong",{parentName:"p"},"coefficients")," (with coefficients\ngiven densely as an array of double floating point numbers from highest to\nlowest power, e.g. ",Object(b.b)("inlineCode",{parentName:"p"},"[5,-3,0]")," represents the polynomial ",Object(b.b)("inlineCode",{parentName:"p"},"5x^2 - 3x"),")."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"the exact same polynomials will be created on each call to this function\nif the same seed is used; this is by design to improve testing.")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-typescript"},"flatCoefficientsArr(2,3,-2,2); //=> [[0.1749166026711464, -0.20349335670471191, 0.9375684261322021], [1.0617692470550537, -1.8918039798736572, 0.8040215969085693]]\nflatCoefficientsArr(2,3,-2,2); //=> [[0.1749166026711464, -0.20349335670471191, 0.9375684261322021], [1.0617692470550537, -1.8918039798736572, 0.8040215969085693]]\n")),Object(b.b)("h4",{id:"parameters-1"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"n")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"the number of polynomials to generate.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"d")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"the length of the polynomial coefficients array")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"a?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the lower bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"b?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 1; the upper bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 123456789; a seed value in ","[0,4294967296]")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"odds?")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the odds that a root will be doubled (applied recursively so that some roots could be tripled, etc.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," number","[][]"),Object(b.b)("hr",null),Object(b.b)("p",null,"\u25b8 function flatRoots\n(",Object(b.b)("inlineCode",{parentName:"p"},"d"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"a?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"b?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"seed?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"odds?"),": number): object"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/predictive-random/double/random.ts#L213"},"predictive-random/double/random.ts:213"))),Object(b.b)("p",null,"Generates and returns an array of polynomials with random ",Object(b.b)("strong",{parentName:"p"},"roots")," (with coefficients\ngiven densely as an array of double floating point numbers from highest to\nlowest power, e.g. ",Object(b.b)("inlineCode",{parentName:"p"},"[5,-3,0]")," represents the polynomial ",Object(b.b)("inlineCode",{parentName:"p"},"5x^2 - 3x"),")."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"also returns a new seed value that can be used as the input to the next\ncall to a predictive random function")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"all roots will approximate real values so is not at all representative of\na natural random root distribution")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"the exact same polynomial will be created on each call to this function\nif the same seed is used; this is by design to improve testing."))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-typescript"},"flatRoots(3,0,10); //=> { p: [1, -17.27247918024659, 97.33487287168995, -179.34094494147305], seed: 939629312 }\n")),Object(b.b)("h4",{id:"parameters-2"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Default value"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"d")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"-"),Object(b.b)("td",{parentName:"tr",align:null},"the degree of the polynomials")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"a")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"0"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the lower bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"b")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"1"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 1; the upper bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"SEED"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 123456789; a seed value in ","[0,4294967296]")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"odds")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"0"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the odds that a root will be doubled (applied recursively so that some roots could be tripled, etc.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," object"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"p")),Object(b.b)("td",{parentName:"tr",align:null},"number[]")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed")),Object(b.b)("td",{parentName:"tr",align:null},"number")))),Object(b.b)("hr",null),Object(b.b)("p",null,"\u25b8 function flatCoefficients\n(",Object(b.b)("inlineCode",{parentName:"p"},"d"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"a?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"b?"),": number, ",Object(b.b)("inlineCode",{parentName:"p"},"seed?"),": number): object"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/predictive-random/double/random.ts#L254"},"predictive-random/double/random.ts:254"))),Object(b.b)("p",null,"Generates and returns an array of polynomials with random ",Object(b.b)("strong",{parentName:"p"},"coefficients")," (with coefficients\ngiven densely as an array of double floating point numbers from highest to\nlowest power, e.g. ",Object(b.b)("inlineCode",{parentName:"p"},"[5,-3,0]")," represents the polynomial ",Object(b.b)("inlineCode",{parentName:"p"},"5x^2 - 3x"),")."),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"also returns a new seed value that can be used as the input to the next\ncall to a predictive random function")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},"the exact same polynomial will be created on each call to this function\nif the same seed is used; this is by design to improve testing."))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(b.b)("pre",null,Object(b.b)("code",{parentName:"pre",className:"language-typescript"},"flatCoefficients(3,-5,5); //=> { p: [0.437291506677866, -0.5087333917617798, 2.3439210653305054], seed: 939629312 }\n")),Object(b.b)("h4",{id:"parameters-3"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"),Object(b.b)("th",{parentName:"tr",align:null},"Default value"),Object(b.b)("th",{parentName:"tr",align:null},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"d")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"-"),Object(b.b)("td",{parentName:"tr",align:null},"the length of the polynomial coefficients array")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"a")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"-1"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 0; the lower bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"b")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"+1"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 1; the upper bound of the coefficients")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed")),Object(b.b)("td",{parentName:"tr",align:null},"number"),Object(b.b)("td",{parentName:"tr",align:null},"SEED"),Object(b.b)("td",{parentName:"tr",align:null},"defaults to 123456789; a seed value in ","[0,4294967296]")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," object"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"Name"),Object(b.b)("th",{parentName:"tr",align:null},"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"p")),Object(b.b)("td",{parentName:"tr",align:null},"number[]")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},Object(b.b)("inlineCode",{parentName:"td"},"seed")),Object(b.b)("td",{parentName:"tr",align:null},"number")))))}c.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),c=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,s=d["".concat(l,".").concat(u)]||d[u]||m[u]||b;return n?r.a.createElement(s,i(i({ref:t},p),{},{components:n})):r.a.createElement(s,i({ref:t},p))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,l=new Array(b);l[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<b;p++)l[p]=n[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);