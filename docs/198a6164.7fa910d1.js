(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{231:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),b=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=b(n),m=r,d=s["".concat(l,".").concat(m)]||s[m]||p[m]||i;return n?a.a.createElement(d,o(o({ref:t},u),{},{components:n})):a.a.createElement(d,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),i=(n(0),n(231)),l={id:"euclidean_division_related_expansion_e_prem_sequence_subresultant",title:"e-prem-sequence-subresultant"},o={unversionedId:"modules/euclidean_division_related_expansion_e_prem_sequence_subresultant",id:"modules/euclidean_division_related_expansion_e_prem_sequence_subresultant",isDocsHomePage:!1,title:"e-prem-sequence-subresultant",description:"\u25b8 function ePremSequenceSubresultant",source:"@site/docs\\modules\\euclidean_division_related_expansion_e_prem_sequence_subresultant.mdx",slug:"/modules/euclidean_division_related_expansion_e_prem_sequence_subresultant",permalink:"/FloPoly/docs/modules/euclidean_division_related_expansion_e_prem_sequence_subresultant",version:"current",sidebar:"sidebar",previous:{title:"e-prem-sequence-primitive",permalink:"/FloPoly/docs/modules/euclidean_division_related_expansion_e_prem_sequence_primitive"},next:{title:"e-sturm-chain",permalink:"/FloPoly/docs/modules/euclidean_division_related_expansion_e_sturm_chain"}},c=[],u={rightToc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"\u25b8 function ePremSequenceSubresultant\n(",Object(i.b)("inlineCode",{parentName:"p"},"f"),": number","[][]",", ",Object(i.b)("inlineCode",{parentName:"p"},"g"),": number","[][]",", ",Object(i.b)("inlineCode",{parentName:"p"},"sturm?"),": boolean): number","[][]","[]"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/euclidean-division-related/expansion/e-prem-sequence-subresultant.ts#L47"},"euclidean-division-related/expansion/e-prem-sequence-subresultant.ts:47"))),Object(i.b)("p",null,"Returns the subresultant pseudo remainder sequence of a/b."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"precondition:")," g !== [], i.e. unequal to the zero polynomial.")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("strong",{parentName:"p"},"precondition:")," the coefficients must be integer Shewchuk floating point\nexpansions; if they are not they can easily be scaled from\nfloating point numbers to Shewchuk expansions by calling ",Object(i.b)("a",{parentName:"p",href:"/FloPoly/docs/modules/scale_to_int_scale_floats_to_ints#scalefloatstoints"},"scaleFloatsToInts"),"\nor similar before calling this function (recall that all floating point\nnumbers are rational).")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Intermediate calculations (and the input coefficients) are done in\ninfinite precision up to overlow (meaning integers can be represented\n",Object(i.b)("em",{parentName:"p"},"exactly")," up to ",Object(i.b)("inlineCode",{parentName:"p"},"2^1024 === 1797...(300 more digits)...37216"),") and may\nthus not be applicable to very high degree polynomials (in which case it is\nbetter to use ",Object(i.b)("a",{parentName:"p",href:"/FloPoly/docs/modules/euclidean_division_related_bigint_b_prem_sequence_subresultant#bpremsequencesubresultant"},"bPremSequenceSubresultant"),")")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"see ",Object(i.b)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/2e6b/95ba84e2160748ba8fc310cdc408fc9bbade.pdf"},Object(i.b)("em",{parentName:"a"},"The subresultant polynomial remainder sequence algorithm")," by Ruiyuan (Ronnie) Chen, p.10")))),Object(i.b)("h4",{id:"parameters"},"Parameters:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Default value"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"f")),Object(i.b)("td",{parentName:"tr",align:null},"number","[][]"),Object(i.b)("td",{parentName:"tr",align:null},"-"),Object(i.b)("td",{parentName:"tr",align:null},"the polynomial a in the formula a = bq + r; the polynomial is given with coefficients as a dense array of integer Shewchuk expansions from highest to lowest power, e.g. ",Object(i.b)("inlineCode",{parentName:"td"},"[[5],[-3],[0]]")," represents the polynomial ",Object(i.b)("inlineCode",{parentName:"td"},"5x^2 - 3x"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"g")),Object(i.b)("td",{parentName:"tr",align:null},"number","[][]"),Object(i.b)("td",{parentName:"tr",align:null},"-"),Object(i.b)("td",{parentName:"tr",align:null},"the polynomial b in the formula a = bq + r")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"sturm")),Object(i.b)("td",{parentName:"tr",align:null},"boolean"),Object(i.b)("td",{parentName:"tr",align:null},"false"),Object(i.b)("td",{parentName:"tr",align:null},"if set to true then calculate a Sturm sequence instead")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," number","[][]","[]"))}b.isMDXComponent=!0}}]);