(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{142:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),i=(n(0),n(231)),b={id:"gcd_bigint_b_integer_gcd",title:"b-integer-gcd"},c={unversionedId:"modules/gcd_bigint_b_integer_gcd",id:"modules/gcd_bigint_b_integer_gcd",isDocsHomePage:!1,title:"b-integer-gcd",description:"\u25b8 function bGcdInt",source:"@site/docs\\modules\\gcd_bigint_b_integer_gcd.mdx",slug:"/modules/gcd_bigint_b_integer_gcd",permalink:"/FloPoly/docs/modules/gcd_bigint_b_integer_gcd",version:"current",sidebar:"sidebar",previous:{title:"b-gcd-prs",permalink:"/FloPoly/docs/modules/gcd_bigint_b_gcd_prs"},next:{title:"integer-gcd",permalink:"/FloPoly/docs/modules/gcd_double_integer_gcd"}},o=[],l={rightToc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"\u25b8 function bGcdInt\n(",Object(i.b)("inlineCode",{parentName:"p"},"a"),": bigint, ",Object(i.b)("inlineCode",{parentName:"p"},"b"),": bigint): bigint"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/gcd/bigint/b-integer-gcd.ts#L7"},"gcd/bigint/b-integer-gcd.ts:7"))),Object(i.b)("p",null,"Computes and returns the greatest common divisor of two integers a and b,\nusing the ",Object(i.b)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Euclidean_algorithm"},"Euclidean Algorithm"),"."),Object(i.b)("h4",{id:"parameters"},"Parameters:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"a")),Object(i.b)("td",{parentName:"tr",align:null},"bigint")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"b")),Object(i.b)("td",{parentName:"tr",align:null},"bigint")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," bigint"),Object(i.b)("hr",null),Object(i.b)("p",null,"\u25b8 function bGcdInts\n(",Object(i.b)("inlineCode",{parentName:"p"},"vals"),": bigint[]): bigint"),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Defined in ",Object(i.b)("a",{parentName:"em",href:"https://github.com/FlorisSteenkamp/FloPoly/blob/93f3a8d/src/gcd/bigint/b-integer-gcd.ts#L38"},"gcd/bigint/b-integer-gcd.ts:38"))),Object(i.b)("p",null,"Naively computes and returns the greatest common divisor of 2 or more\nintegers by taking each integer in turn and calculating the GCD of that\ninteger and the previously calculated GCD (where the first GCD is simply\ntaken as the first number)."),Object(i.b)("h4",{id:"parameters-1"},"Parameters:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"vals")),Object(i.b)("td",{parentName:"tr",align:null},"bigint[]"),Object(i.b)("td",{parentName:"tr",align:null},"the integers for which the GCD is to be calculated")))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Returns:")," bigint"))}p.isMDXComponent=!0},231:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},g=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,b=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=p(n),g=r,m=d["".concat(b,".").concat(g)]||d[g]||u[g]||i;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,b=new Array(i);b[0]=g;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,b[1]=c;for(var l=2;l<i;l++)b[l]=n[l];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);